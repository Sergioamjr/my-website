{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.js","webpack:///./src/components/Disqus/index.js","webpack:///./src/templates/post_en.js","webpack:///./src/utils/sharedPropTypes.js"],"names":["Disqus","url","id","useEffect","d","s","document","createElement","src","setAttribute","Date","head","body","appendChild","disqusConfig","Post","props","post","data","wordpressWpPostsEn","title","location","href","tranlation","acf","translation","description","excerpt","small","css","largeMgBottom","className","mgBottom","secondaryFont","linkStyle","to","secondTitle","dangerouslySetInnerHTML","__html","text","dateTime","date","content","pageQuery","PropTypes","shape","string","wordpressPost","isRequired"],"mappings":"qHA+BeA,EAZA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,GAIrB,OAHAC,qBAAU,YAjBS,SAAC,GAAiB,IAQ/BC,EACFC,EATgC,EAAdJ,IAAc,EAATC,GAQrBE,EAAIE,UACND,EAAID,EAAEG,cAAc,WACpBC,IAAM,mDACRH,EAAEI,aAAa,kBAAmB,IAAIC,OACrCN,EAAEO,MAAQP,EAAEQ,MAAMC,YAAYR,GAM/BS,CAAa,CAAEb,MAAKC,SACnB,CAACD,EAAKC,IACF,yBAAKA,GAAG,mBCvBjB,mC,gbC0Dea,UA1CF,SAAAC,GACX,IAAMC,EAAOD,EAAME,KAAKC,mBAClBjB,EAAKe,EAAKf,GACVkB,EAAQH,EAAKG,MACbnB,EAAMe,EAAMK,SAASC,KACrBC,EAAaN,EAAKO,IAAIC,YAAYxB,IAExC,OACE,YAAC,IAAD,CAAUmB,MAAOH,EAAKG,MAAOM,YAAaT,EAAKU,SAC7C,YAAC,IAAD,CAAWC,OAAK,GACd,uBAASC,IAAKC,IAAeC,UAAU,gBACrC,mBAAKF,IAAKG,KACR,YAAC,OAAD,CACEH,IAAKA,YAAF,KACEI,IAAeC,MAEpBC,GAAIZ,GAJN,mCASF,kBAAIM,IAAKO,IAAaC,wBAAyB,CAAEC,OAAQlB,KACzD,iBACES,IAAKA,YAAF,IACCU,MAFN,eAOE,oBAAMC,SAAUvB,EAAKwB,MAArB,IAA6BxB,EAAKwB,OAGpC,mBAAKZ,IAAKU,IAAMF,wBAAyB,CAAEC,OAAQrB,EAAKyB,YAE1D,YAAC,IAAD,CAAQzC,IAAKA,EAAKC,GAAIA,OAUvB,IAAMyC,EAAS,c,kCC5DtB,yBAGYC,IAAUC,MAAM,CACxBvB,KAAMsB,IAAUE,SAEZF,IAAUC,MAAM,CACpBE,cAAeH,IAAUC,MAAM,CAC7B3C,GAAI0C,IAAUE,OACd1B,MAAOwB,IAAUE,OACjBJ,QAASE,IAAUE,OACnBnB,QAASiB,IAAUE,OACnBL,KAAMG,IAAUE,WAEjBE","file":"component---src-templates-post-en-js-7a4e00ec27761f7faa59.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst disqusConfig = ({ url, id }) => {\n  // eslint-disable-next-line no-unused-vars\n  var disqus_config = function() {\n    this.page.url = url; // Replace PAGE_URL with your page's canonical URL variable\n    this.page.identifier = id; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n  };\n\n  (function() {\n    var d = document,\n      s = d.createElement(\"script\");\n    s.src = \"https://sergiojunior-netlify.disqus.com/embed.js\";\n    s.setAttribute(\"data-timestamp\", +new Date());\n    (d.head || d.body).appendChild(s);\n  })();\n};\n\nconst Disqus = ({ url, id }) => {\n  useEffect(() => {\n    disqusConfig({ url, id });\n  }, [url, id]);\n  return <div id=\"disqus_thread\"></div>;\n};\n\nDisqus.propTypes = {\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default Disqus;\n","export { default } from \"./Disqus\";\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { graphql, Link } from \"gatsby\";\nimport Template from \"../components/Template\";\nimport {\n  Container,\n  secondTitle,\n  text,\n  largeMgBottom,\n  mgBottom,\n  secondaryFont,\n  linkStyle\n} from \"../design\";\nimport Disqus from \"../components/Disqus\";\nimport { postPropTypes } from \"../utils/sharedPropTypes\";\n\nconst Post = props => {\n  const post = props.data.wordpressWpPostsEn;\n  const id = post.id;\n  const title = post.title;\n  const url = props.location.href;\n  const tranlation = post.acf.translation.url;\n\n  return (\n    <Template title={post.title} description={post.excerpt}>\n      <Container small>\n        <article css={largeMgBottom} className=\"post-content\">\n          <div css={mgBottom}>\n            <Link\n              css={css`\n                ${(secondaryFont, linkStyle)}\n              `}\n              to={tranlation}\n            >\n              Leia esse artigo em PortuguÃªs.\n            </Link>\n          </div>\n          <h1 css={secondTitle} dangerouslySetInnerHTML={{ __html: title }} />\n          <p\n            css={css`\n              ${text};\n              color: var(--gray);\n            `}\n          >\n            Published on\n            <time dateTime={post.date}> {post.date}</time>\n          </p>\n\n          <div css={text} dangerouslySetInnerHTML={{ __html: post.content }} />\n        </article>\n        <Disqus url={url} id={id} />\n      </Container>\n    </Template>\n  );\n};\n\nPost.propTypes = postPropTypes;\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    wordpressWpPostsEn(id: { eq: $id }) {\n      id\n      title\n      content\n      excerpt\n      date(formatString: \"MM-DD-YYYY\")\n      acf {\n        translation {\n          url\n        }\n      }\n    }\n  }\n`;\n","import PropTypes from \"prop-types\";\n\nexport const postPropTypes = {\n  location: PropTypes.shape({\n    href: PropTypes.string\n  }),\n  data: PropTypes.shape({\n    wordpressPost: PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      excerpt: PropTypes.string,\n      date: PropTypes.string\n    })\n  }).isRequired\n};\n"],"sourceRoot":""}