{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/BlogCard/BlogCard.js","webpack://gatsby-starter-default/./src/components/Tags/Tags.js","webpack://gatsby-starter-default/./src/pages/blog.js","webpack://gatsby-starter-default/./src/views/page.js"],"names":["zIndex","css","xLargeMgBottom","BlogCard","title","excerpt","path","categories","externalLink","label","secondTitle","text","dangerouslySetInnerHTML","__html","length","mgBottom","map","index","category","Tags","key","name","className","rel","target","linkStyle","href","Link","to","defaultProps","tags","props","data","allMdx","edges","sort","a","b","Date","node","frontmatter","date","getTime","translateLabel","translateTo","i","slug","includes","Page","subtitle","children","small","pageTitle"],"mappings":"0NAaMA,GAASC,QAAH,qEAGRC,MAGEC,EAAW,SAAC,GAOX,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,MAEA,OACE,eAAKR,IAAKD,IACR,aAAGC,IAAKS,MAAcN,IACtB,aAAGH,IAAKU,KAAMC,wBAAyB,CAAEC,OAAQR,KAChDE,EAAWO,OAAS,IACnB,eAAKb,IAAKc,MACPR,EAAWS,KAAI,WAAeC,GAAf,IAAGC,EAAH,EAAGA,SAAH,OACd,QAACC,EAAA,EAAD,CAAMC,IAAKH,EAAOI,KAAMH,QAI7BV,GAAgBF,IACf,aACEgB,UAAU,iBACVC,IAAI,sBACJC,OAAO,SACPvB,IAAKwB,KACLC,KAAMpB,GAELG,IAGHD,GAAgBF,IAChB,QAAC,EAAAqB,KAAD,CAAML,UAAU,iBAAiBrB,IAAKwB,KAAWG,GAAItB,GAClDG,KAoBXN,EAAS0B,aAAe,CACtBpB,MAAO,YACPF,WAAY,IAGd,S,yFC/DA,EARa,SAAC,GAAc,IAAZc,EAAW,EAAXA,KACd,OAAO,gBAAMpB,IAAK6B,MAAOT,K,yECqC3B,UArCa,SAACU,GACZ,IAAMC,EAAOD,EAAMC,KAAKC,OAAOC,MAAMC,MACnC,SAACC,EAAGC,GAAJ,OACE,IAAIC,KAAKD,EAAEE,KAAKC,YAAYC,MAAMC,UAClC,IAAIJ,KAAKF,EAAEG,KAAKC,YAAYC,SAGhC,OACE,QAAC,IAAD,CACEE,eAAe,iBACfC,YAAY,WACZxC,MAAM,YAEN,mBACG4B,EAAKhB,KAAI,WAAW6B,GAAO,IAAfN,EAAc,EAAdA,KACHO,EAAsBP,EAAtBO,KAAMN,EAAgBD,EAAhBC,YACNpC,EAAyBoC,EAAzBpC,MAAOC,EAAkBmC,EAAlBnC,QAASC,EAASkC,EAATlC,KACxB,OAAIwC,EAAKC,SAAS,OAASzC,EAAKyC,SAAS,cAChC,MAIP,QAAC,IAAD,CACExC,WAAY,GACZD,KAAMA,EACND,QAASA,EACTD,MAAOA,EACPgB,IAAKyB,EACLpC,MAAM,oB,yFC3BduC,EAAO,SAAC,GAAgE,IAA9D5C,EAA6D,EAA7DA,MAAO6C,EAAsD,EAAtDA,SAAUN,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,YAAaM,EAAe,EAAfA,SAC5D,OACE,QAAC,IAAD,MACE,QAAC,KAAD,CAAWC,OAAK,IACd,eAAK7B,UAAU,gBACZqB,GAAkBC,IACjB,eACE3C,KAAKA,QAAF,0DACCc,QAGJ,QAAC,EAAAY,KAAD,CAAML,UAAU,iBAAiBM,GAAE,GAAKgB,GACrCD,IAINvC,IAAS,cAAIH,IAAKmD,MAAYhD,GAC9B6C,IAAY,aAAGhD,IAAKS,MAAcuC,IACnC,eAAKhD,IAAKU,MAAOuC,OAO3B,MAUAF,EAAKnB,aAAe,CAClBzB,MAAO,GACP6C,SAAU,GACVN,eAAgB,GAChBC,YAAa","file":"component---src-pages-blog-js-6f3a5d534c87677f59ba.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Tags from \"../Tags\";\nimport {\n  text,\n  xLargeMgBottom,\n  secondTitle,\n  mgBottom,\n  linkStyle,\n} from \"../../design\";\n\nconst zIndex = css`\n  position: relative;\n  z-index: 1;\n  ${xLargeMgBottom};\n`;\n\nconst BlogCard = ({\n  title,\n  excerpt,\n  path,\n  categories,\n  externalLink,\n  label,\n}) => {\n  return (\n    <div css={zIndex}>\n      <p css={secondTitle}>{title}</p>\n      <p css={text} dangerouslySetInnerHTML={{ __html: excerpt }} />\n      {categories.length > 0 && (\n        <div css={mgBottom}>\n          {categories.map(({ category }, index) => (\n            <Tags key={index} name={category} />\n          ))}\n        </div>\n      )}\n      {externalLink && path && (\n        <a\n          className=\"secondary-font\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          css={linkStyle}\n          href={path}\n        >\n          {label}\n        </a>\n      )}\n      {!externalLink && path && (\n        <Link className=\"secondary-font\" css={linkStyle} to={path}>\n          {label}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nBlogCard.propTypes = {\n  externalLink: PropTypes.bool,\n  title: PropTypes.string,\n  label: PropTypes.string,\n  excerpt: PropTypes.string,\n  path: PropTypes.string,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      category: PropTypes.string,\n    })\n  ),\n};\n\nBlogCard.defaultProps = {\n  label: \"Read more\",\n  categories: [],\n};\n\nexport default BlogCard;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { tags } from \"../../design\";\n\nconst Tags = ({ name }) => {\n  return <span css={tags}>{name}</span>;\n};\n\nTags.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default Tags;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { graphql } from \"gatsby\";\nimport BlogCard from \"../components/BlogCard\";\nimport Page from \"../views/page\";\n\nconst Blog = (props) => {\n  const data = props.data.allMdx.edges.sort(\n    (a, b) =>\n      new Date(b.node.frontmatter.date).getTime() -\n      new Date(a.node.frontmatter.date)\n  );\n\n  return (\n    <Page\n      translateLabel=\"See in English\"\n      translateTo=\"/en/blog\"\n      title=\"Artigos\"\n    >\n      <div>\n        {data.map(({ node }, i) => {\n          const { slug, frontmatter } = node;\n          const { title, excerpt, path } = frontmatter;\n          if (slug.includes(\"__\") || path.includes(\"/posts_en/\")) {\n            return null;\n          }\n\n          return (\n            <BlogCard\n              categories={[]}\n              path={path}\n              excerpt={excerpt}\n              title={title}\n              key={i}\n              label=\"Ler mais\"\n            />\n          );\n        })}\n      </div>\n    </Page>\n  );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    allMdx {\n      edges {\n        node {\n          slug\n          frontmatter {\n            date\n            excerpt\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Template from \"../components/Template\";\nimport { Container, pageTitle, mgBottom, secondTitle, text } from \"../design\";\n\nconst Page = ({ title, subtitle, translateLabel, translateTo, children }) => {\n  return (\n    <Template>\n      <Container small>\n        <div className=\"post-content\">\n          {translateLabel && translateTo && (\n            <div\n              css={css`\n                ${mgBottom}\n              `}\n            >\n              <Link className=\"secondary-font\" to={`${translateTo}`}>\n                {translateLabel}\n              </Link>\n            </div>\n          )}\n          {title && <h2 css={pageTitle}>{title}</h2>}\n          {subtitle && <p css={secondTitle}>{subtitle}</p>}\n          <div css={text}>{children}</div>\n        </div>\n      </Container>\n    </Template>\n  );\n};\n\nexport default Page;\n\nPage.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  translateLabel: PropTypes.string,\n  translateTo: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nPage.defaultProps = {\n  title: \"\",\n  subtitle: \"\",\n  translateLabel: \"\",\n  translateTo: \"\",\n};\n"],"sourceRoot":""}