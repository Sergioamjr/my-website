{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.js","webpack:///./src/views/post.js","webpack:///./src/templates/post_en.js","webpack:///./src/utils/sharedPropTypes.js"],"names":["Disqus","url","id","useEffect","d","s","document","createElement","src","setAttribute","Date","head","body","appendChild","disqusConfig","PostView","title","img","tranlation","excerpt","date","content","translationLabel","publishedAt","Template","thumbnail","description","small","css","largeMgBottom","className","mgBottom","secondaryFont","linkStyle","to","secondTitle","dangerouslySetInnerHTML","__html","text","dateTime","alt","defaultProps","Post","props","post","data","wordpressWpPostsEn","location","href","featured_media","localFile","childImageSharp","resolutions","acf","translation","pageQuery","PropTypes","shape","string","wordpressPost","isRequired"],"mappings":"qKA+BeA,EAZA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,GAIrB,OAHAC,qBAAU,YAjBS,SAAC,GAAiB,IAQ/BC,EACFC,EATgC,EAAdJ,IAAc,EAATC,GAQrBE,EAAIE,UACND,EAAID,EAAEG,cAAc,WACpBC,IAAM,mDACRH,EAAEI,aAAa,kBAAmB,IAAIC,OACrCN,EAAEO,MAAQP,EAAEQ,MAAMC,YAAYR,GAM/BS,CAAa,CAAEb,MAAKC,SACnB,CAACD,EAAKC,IACF,yBAAKA,GAAG,mB,mRCPjB,IAAMa,EAAW,SAAC,GAWX,IAVLb,EAUI,EAVJA,GACAc,EASI,EATJA,MACAf,EAQI,EARJA,IACAgB,EAOI,EAPJA,IACAC,EAMI,EANJA,WACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,YAEA,OACE,YAACC,EAAA,EAAD,CAAUC,UAAWR,EAAKD,MAAOA,EAAOU,YAAaP,GACnD,YAAC,IAAD,CAAWQ,OAAK,GACd,uBAASC,IAAKC,IAAeC,UAAU,gBACrC,mBAAKF,IAAKG,KACR,YAAC,OAAD,CACEH,IAAKA,YAAF,KACEI,IAAeC,MAEpBC,GAAIhB,GAEHI,IAGL,kBAAIM,IAAKO,IAAaC,wBAAyB,CAAEC,OAAQrB,KACzD,iBACEY,IAAKA,YAAF,IACCU,MAIHf,EACD,oBAAMgB,SAAUnB,GAAhB,IAAwBA,IAEzBH,GAAO,mBAAKT,IAAKS,EAAKuB,IAAKxB,IAE5B,mBAAKY,IAAKU,IAAMF,wBAAyB,CAAEC,OAAQhB,MAErD,YAAC,EAAD,CAAQpB,IAAKA,EAAKC,GAAIA,OAmB9Ba,EAAS0B,aAAe,CACtBlB,YAAa,eACbD,iBAAkB,gCAGLP,O,kCChFf,yFA+Be2B,UAzBF,SAAAC,GACX,IAAMC,EAAOD,EAAME,KAAKC,mBAChB5C,EAAsC0C,EAAtC1C,GAAIc,EAAkC4B,EAAlC5B,MAAOG,EAA2ByB,EAA3BzB,QAASC,EAAkBwB,EAAlBxB,KAAMC,EAAYuB,EAAZvB,QAC5BpB,EAAM0C,EAAMI,SAASC,KACrB/B,EAAM2B,EAAKK,eAAeC,UAAUC,gBAAgBC,YAAY5C,IAChEU,EAAa0B,EAAKS,IAAIC,YAAYrD,IAExC,OACE,YAAC,IAAD,CACEA,IAAKA,EACLe,MAAOA,EACPE,WAAYA,EACZhB,GAAIA,EACJe,IAAKA,EACLE,QAASA,EACTC,KAAMA,EACNG,YAAY,eACZD,iBAAiB,gCACjBD,QAASA,KASR,IAAMkC,EAAS,Y,kCCjCtB,yBAGYC,IAAUC,MAAM,CACxBT,KAAMQ,IAAUE,SAEZF,IAAUC,MAAM,CACpBE,cAAeH,IAAUC,MAAM,CAC7BvD,GAAIsD,IAAUE,OACd1C,MAAOwC,IAAUE,OACjBrC,QAASmC,IAAUE,OACnBvC,QAASqC,IAAUE,OACnBtC,KAAMoC,IAAUE,WAEjBE","file":"component---src-templates-post-en-js-3384819e1849504782f9.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst disqusConfig = ({ url, id }) => {\n  // eslint-disable-next-line no-unused-vars\n  var disqus_config = function() {\n    this.page.url = url; // Replace PAGE_URL with your page's canonical URL variable\n    this.page.identifier = id; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n  };\n\n  (function() {\n    var d = document,\n      s = d.createElement(\"script\");\n    s.src = \"https://sergiojunior-netlify.disqus.com/embed.js\";\n    s.setAttribute(\"data-timestamp\", +new Date());\n    (d.head || d.body).appendChild(s);\n  })();\n};\n\nconst Disqus = ({ url, id }) => {\n  useEffect(() => {\n    disqusConfig({ url, id });\n  }, [url, id]);\n  return <div id=\"disqus_thread\"></div>;\n};\n\nDisqus.propTypes = {\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default Disqus;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Template from \"../components/Template\";\nimport {\n  Container,\n  secondTitle,\n  text,\n  largeMgBottom,\n  mgBottom,\n  linkStyle,\n  secondaryFont\n} from \"../design\";\nimport Disqus from \"../components/Disqus\";\n\nconst PostView = ({\n  id,\n  title,\n  url,\n  img,\n  tranlation,\n  excerpt,\n  date,\n  content,\n  translationLabel,\n  publishedAt\n}) => {\n  return (\n    <Template thumbnail={img} title={title} description={excerpt}>\n      <Container small>\n        <article css={largeMgBottom} className=\"post-content\">\n          <div css={mgBottom}>\n            <Link\n              css={css`\n                ${(secondaryFont, linkStyle)}\n              `}\n              to={tranlation}\n            >\n              {translationLabel}\n            </Link>\n          </div>\n          <h1 css={secondTitle} dangerouslySetInnerHTML={{ __html: title }} />\n          <p\n            css={css`\n              ${text};\n              color: var(--gray);\n            `}\n          >\n            {publishedAt}\n            <time dateTime={date}> {date}</time>\n          </p>\n          {img && <img src={img} alt={title} />}\n\n          <div css={text} dangerouslySetInnerHTML={{ __html: content }} />\n        </article>\n        <Disqus url={url} id={id} />\n      </Container>\n    </Template>\n  );\n};\n\nPostView.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  tranlation: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  translationLabel: PropTypes.string,\n  publishedAt: PropTypes.string\n};\n\nPostView.defaultProps = {\n  publishedAt: \"Publicado em\",\n  translationLabel: \"Read this article in English\"\n};\n\nexport default PostView;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { graphql } from \"gatsby\";\nimport { postPropTypes } from \"../utils/sharedPropTypes\";\nimport PostView from \"../views/post\";\n\nconst Post = props => {\n  const post = props.data.wordpressWpPostsEn;\n  const { id, title, excerpt, date, content } = post;\n  const url = props.location.href;\n  const img = post.featured_media.localFile.childImageSharp.resolutions.src;\n  const tranlation = post.acf.translation.url;\n\n  return (\n    <PostView\n      url={url}\n      title={title}\n      tranlation={tranlation}\n      id={id}\n      img={img}\n      excerpt={excerpt}\n      date={date}\n      publishedAt=\"Published at\"\n      translationLabel=\"Leia esse artigo em PortuguÃªs\"\n      content={content}\n    />\n  );\n};\n\nPost.propTypes = postPropTypes;\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    wordpressWpPostsEn(id: { eq: $id }) {\n      id\n      title\n      content\n      excerpt\n      date(formatString: \"MM-DD-YYYY\")\n      featured_media {\n        localFile {\n          childImageSharp {\n            resolutions(width: 670, height: 500) {\n              src\n            }\n          }\n        }\n      }\n      acf {\n        translation {\n          url\n        }\n      }\n    }\n  }\n`;\n","import PropTypes from \"prop-types\";\n\nexport const postPropTypes = {\n  location: PropTypes.shape({\n    href: PropTypes.string\n  }),\n  data: PropTypes.shape({\n    wordpressPost: PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      excerpt: PropTypes.string,\n      date: PropTypes.string\n    })\n  }).isRequired\n};\n"],"sourceRoot":""}