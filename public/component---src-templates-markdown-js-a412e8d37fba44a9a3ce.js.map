{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/Disqus/Disqus.js","webpack:///./src/views/post.js","webpack:///./src/templates/markdown.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","Disqus","url","id","useEffect","d","s","document","createElement","src","setAttribute","Date","head","body","appendChild","disqusConfig","captionStyle","css","PostView","title","img","tranlation","excerpt","content","date","translationLabel","imgAlt","publishedAt","caption","Template","thumbnail","description","small","largeMgBottom","className","mgBottom","secondaryFont","linkStyle","to","secondTitle","dangerouslySetInnerHTML","__html","alt","text","defaultProps","Markdown","pageContext","node","console","log","frontmatter","translate","image","childImageSharp","original"],"mappings":"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","file":"component---src-templates-markdown-js-a412e8d37fba44a9a3ce.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst disqusConfig = ({ url, id }) => {\n  // eslint-disable-next-line no-unused-vars\n  var disqus_config = function() {\n    this.page.url = url; // Replace PAGE_URL with your page's canonical URL variable\n    this.page.identifier = id; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n  };\n\n  (function() {\n    var d = document,\n      s = d.createElement(\"script\");\n    s.src = \"https://sergiojunior-netlify.disqus.com/embed.js\";\n    s.setAttribute(\"data-timestamp\", +new Date());\n    (d.head || d.body).appendChild(s);\n  })();\n};\n\nconst Disqus = ({ url, id }) => {\n  useEffect(() => {\n    disqusConfig({ url, id });\n  }, [url, id]);\n  return <div id=\"disqus_thread\"></div>;\n};\n\nDisqus.propTypes = {\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default Disqus;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport Template from \"../components/Template\";\nimport {\n  Container,\n  secondTitle,\n  text,\n  largeMgBottom,\n  mgBottom,\n  linkStyle,\n  secondaryFont,\n} from \"../design\";\nimport Disqus from \"../components/Disqus\";\n\nconst captionStyle = css`\n  margin-top: -8px;\n  text-align: center;\n  color: #6b6b6b;\n`;\n\nconst PostView = ({\n  id,\n  title,\n  url,\n  img,\n  tranlation,\n  excerpt,\n  date,\n  content,\n  translationLabel,\n  publishedAt,\n  imgAlt,\n  caption,\n}) => {\n  return (\n    <Template thumbnail={img} title={title} description={excerpt}>\n      <Container small>\n        <article css={largeMgBottom} className=\"post-content\">\n          {!!tranlation && (\n            <div css={mgBottom}>\n              <Link\n                className=\"secondary-font\"\n                css={css`\n                  ${secondaryFont};\n                  ${linkStyle}}\n                `}\n                to={tranlation}\n              >\n                {translationLabel}\n              </Link>\n            </div>\n          )}\n          <h1 css={secondTitle} dangerouslySetInnerHTML={{ __html: title }} />\n          {false && (\n            <p\n              css={css`\n                ${text};\n                color: var(--gray);\n              `}\n            >\n              {publishedAt}\n              <time dateTime={date}> {date}</time>\n            </p>\n          )}\n          {img && <img src={img} alt={imgAlt} />}\n          {caption && (\n            <div\n              css={css`\n                ${text};\n                ${captionStyle}\n              `}\n              dangerouslySetInnerHTML={{ __html: caption }}\n            />\n          )}\n\n          <div css={text}>\n            <MDXRenderer>{content}</MDXRenderer>\n          </div>\n        </article>\n        <Disqus url={url} id={id} />\n      </Container>\n    </Template>\n  );\n};\n\nPostView.propTypes = {\n  caption: PropTypes.string,\n  imgAlt: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  tranlation: PropTypes.string,\n  excerpt: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  translationLabel: PropTypes.string,\n  publishedAt: PropTypes.string,\n};\n\nPostView.defaultProps = {\n  tranlation: \"\",\n  caption: \"\",\n  publishedAt: \"Publicado em\",\n  translationLabel: \"Read this article in English\",\n};\n\nexport default PostView;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PostView from \"../views/post\";\n\nconst Markdown = (props) => {\n  const body = props.pageContext.node.body;\n  console.log(props.pageContext.node.frontmatter);\n  const {\n    title,\n    translate,\n    caption,\n    image,\n  } = props.pageContext.node.frontmatter;\n  const img = image.childImageSharp.original.src;\n  return (\n    <PostView\n      caption={caption}\n      imgAlt=\"\"\n      url=\"\"\n      title={title}\n      tranlation={translate}\n      id=\"id\"\n      img={img}\n      excerpt=\"dxc\"\n      date=\"date\"\n      content={body}\n    />\n  );\n};\n\nexport default Markdown;\n"],"sourceRoot":""}