{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/BlogCard/BlogCard.js","webpack://gatsby-starter-default/./src/components/Tags/Tags.js","webpack://gatsby-starter-default/./src/pages/projetos.js","webpack://gatsby-starter-default/./src/views/page.js"],"names":["zIndex","css","xLargeMgBottom","BlogCard","title","excerpt","path","categories","externalLink","label","secondTitle","text","dangerouslySetInnerHTML","__html","length","mgBottom","map","index","category","Tags","key","name","className","rel","target","linkStyle","href","Link","to","defaultProps","tags","projects","description","link","translateLabel","translateTo","i","Page","subtitle","children","small","pageTitle"],"mappings":"4NAaMA,GAASC,QAAH,qEAGRC,MAGEC,EAAW,SAAC,GAOX,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,MAEA,OACE,eAAKR,IAAKD,IACR,aAAGC,IAAKS,MAAcN,IACtB,aAAGH,IAAKU,KAAMC,wBAAyB,CAAEC,OAAQR,KAChDE,EAAWO,OAAS,IACnB,eAAKb,IAAKc,MACPR,EAAWS,KAAI,WAAeC,GAAf,IAAGC,EAAH,EAAGA,SAAH,OACd,QAACC,EAAA,EAAD,CAAMC,IAAKH,EAAOI,KAAMH,QAI7BV,GAAgBF,IACf,aACEgB,UAAU,iBACVC,IAAI,sBACJC,OAAO,SACPvB,IAAKwB,KACLC,KAAMpB,GAELG,IAGHD,GAAgBF,IAChB,QAAC,EAAAqB,KAAD,CAAML,UAAU,iBAAiBrB,IAAKwB,KAAWG,GAAItB,GAClDG,KAoBXN,EAAS0B,aAAe,CACtBpB,MAAO,YACPF,WAAY,IAGd,S,yFC/DA,EARa,SAAC,GAAc,IAAZc,EAAW,EAAXA,KACd,OAAO,gBAAMpB,IAAK6B,MAAOT,K,0ECDrBU,EAAW,CACf,CACEV,KAAM,cACNW,YACE,gFACFC,KAAM,uCAER,CACEZ,KAAM,aACNW,YAAa,4DACbC,KAAM,8CAER,CACEZ,KAAM,oBACNW,YACE,gGACFC,KAAM,gDA6BV,UAzBiB,WACf,OACE,QAAC,IAAD,CACEC,eAAe,iBACfC,YAAY,cACZ/B,MAAM,aAEN,mBACG2B,EAASf,KAAI,WAA8BoB,GAAO,IAAlCf,EAAiC,EAAjCA,KAAMY,EAA2B,EAA3BA,KAAMD,EAAqB,EAArBA,YAC3B,OACE,QAAC,IAAD,CACExB,cAAY,EACZD,WAAY,GACZF,QAAS2B,EACT1B,KAAM2B,EACN7B,MAAOiB,EACPZ,MAAM,WACNW,IAAKgB,W,yFCnCbC,EAAO,SAAC,GAAgE,IAA9DjC,EAA6D,EAA7DA,MAAOkC,EAAsD,EAAtDA,SAAUJ,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,YAAaI,EAAe,EAAfA,SAC5D,OACE,QAAC,IAAD,MACE,QAAC,KAAD,CAAWC,OAAK,IACd,eAAKlB,UAAU,gBACZY,GAAkBC,IACjB,eACElC,KAAKA,QAAF,0DACCc,QAGJ,QAAC,EAAAY,KAAD,CAAML,UAAU,iBAAiBM,GAAE,GAAKO,GACrCD,IAIN9B,IAAS,cAAIH,IAAKwC,MAAYrC,GAC9BkC,IAAY,aAAGrC,IAAKS,MAAc4B,IACnC,eAAKrC,IAAKU,MAAO4B,OAO3B,MAUAF,EAAKR,aAAe,CAClBzB,MAAO,GACPkC,SAAU,GACVJ,eAAgB,GAChBC,YAAa","file":"component---src-pages-projetos-js-cea11637f86c4f0ee936.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Tags from \"../Tags\";\nimport {\n  text,\n  xLargeMgBottom,\n  secondTitle,\n  mgBottom,\n  linkStyle,\n} from \"../../design\";\n\nconst zIndex = css`\n  position: relative;\n  z-index: 1;\n  ${xLargeMgBottom};\n`;\n\nconst BlogCard = ({\n  title,\n  excerpt,\n  path,\n  categories,\n  externalLink,\n  label,\n}) => {\n  return (\n    <div css={zIndex}>\n      <p css={secondTitle}>{title}</p>\n      <p css={text} dangerouslySetInnerHTML={{ __html: excerpt }} />\n      {categories.length > 0 && (\n        <div css={mgBottom}>\n          {categories.map(({ category }, index) => (\n            <Tags key={index} name={category} />\n          ))}\n        </div>\n      )}\n      {externalLink && path && (\n        <a\n          className=\"secondary-font\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          css={linkStyle}\n          href={path}\n        >\n          {label}\n        </a>\n      )}\n      {!externalLink && path && (\n        <Link className=\"secondary-font\" css={linkStyle} to={path}>\n          {label}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nBlogCard.propTypes = {\n  externalLink: PropTypes.bool,\n  title: PropTypes.string,\n  label: PropTypes.string,\n  excerpt: PropTypes.string,\n  path: PropTypes.string,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      category: PropTypes.string,\n    })\n  ),\n};\n\nBlogCard.defaultProps = {\n  label: \"Read more\",\n  categories: [],\n};\n\nexport default BlogCard;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { tags } from \"../../design\";\n\nconst Tags = ({ name }) => {\n  return <span css={tags}>{name}</span>;\n};\n\nTags.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default Tags;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport BlogCard from \"../components/BlogCard\";\nimport Page from \"../views/page\";\n\nconst projects = [\n  {\n    name: \"WhatToWatch\",\n    description:\n      \"Receba sugestões do que assistir ou veja os filmes mais populares por gênero.\",\n    link: \"https://whatto-watch.herokuapp.com/\",\n  },\n  {\n    name: \"Snake Game\",\n    description: \"O clássico jogo da cobrinha feito com React e Typescript.\",\n    link: \"https://github.com/Sergioamjr/snakegame-ts\",\n  },\n  {\n    name: \"Unguessing UI    \",\n    description:\n      \"UnGuessing UI é um componente criado para ajudar a construir fieis UI’s sem dificuldades.    \",\n    link: \"https://github.com/Sergioamjr/unguessing-ui\",\n  },\n];\n\nconst Projects = () => {\n  return (\n    <Page\n      translateLabel=\"See in English\"\n      translateTo=\"en/projects\"\n      title=\"Projetos\"\n    >\n      <div>\n        {projects.map(({ name, link, description }, i) => {\n          return (\n            <BlogCard\n              externalLink\n              categories={[]}\n              excerpt={description}\n              path={link}\n              title={name}\n              label=\"Ver mais\"\n              key={i}\n            />\n          );\n        })}\n      </div>\n    </Page>\n  );\n};\nexport default Projects;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Template from \"../components/Template\";\nimport { Container, pageTitle, mgBottom, secondTitle, text } from \"../design\";\n\nconst Page = ({ title, subtitle, translateLabel, translateTo, children }) => {\n  return (\n    <Template>\n      <Container small>\n        <div className=\"post-content\">\n          {translateLabel && translateTo && (\n            <div\n              css={css`\n                ${mgBottom}\n              `}\n            >\n              <Link className=\"secondary-font\" to={`${translateTo}`}>\n                {translateLabel}\n              </Link>\n            </div>\n          )}\n          {title && <h2 css={pageTitle}>{title}</h2>}\n          {subtitle && <p css={secondTitle}>{subtitle}</p>}\n          <div css={text}>{children}</div>\n        </div>\n      </Container>\n    </Template>\n  );\n};\n\nexport default Page;\n\nPage.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  translateLabel: PropTypes.string,\n  translateTo: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nPage.defaultProps = {\n  title: \"\",\n  subtitle: \"\",\n  translateLabel: \"\",\n  translateTo: \"\",\n};\n"],"sourceRoot":""}