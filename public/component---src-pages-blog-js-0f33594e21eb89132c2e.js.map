{"version":3,"sources":["webpack:///./src/components/BlogCard/BlogCard.js","webpack:///./src/components/BlogCard/index.js","webpack:///./src/pages/blog.js"],"names":["BlogCard","title","excerpt","slug","categories","css","xLargeMgBottom","secondTitle","text","dangerouslySetInnerHTML","__html","length","mgBottom","map","index","category","Tags","key","name","linkStyle","to","Blog","props","data","allWordpressPost","edges","small","pageTitle","i","node","acf","pageQuery"],"mappings":"+IA2CeA,EA9BE,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACxC,OACE,mBAAKC,IAAKC,KACR,iBAAGD,IAAKE,KAAcN,GACtB,iBAAGI,IAAKG,IAAMC,wBAAyB,CAAEC,OAAQR,KAChDE,EAAWO,OAAS,GACnB,mBAAKN,IAAKO,KACPR,EAAWS,KAAI,WAAeC,GAAf,IAAGC,EAAH,EAAGA,SAAH,OACd,YAACC,EAAA,EAAD,CAAMC,IAAKH,EAAOI,KAAMH,QAI9B,YAAC,OAAD,CAAMV,IAAKc,IAAWC,GAAE,IAAMjB,GAA9B,eCzBN,mC,kCCAA,qGAoCekB,UA5BF,SAAAC,GACX,IAAMC,EAAOD,EAAMC,KAAKC,iBAAiBC,MACzC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAWC,OAAK,GACd,kBAAIrB,IAAKsB,KAAT,YACCJ,EAAKV,KAAI,WAAWe,GAAO,IAAfC,EAAc,EAAdA,KAET5B,EAIE4B,EAJF5B,MACAC,EAGE2B,EAHF3B,QACAC,EAEE0B,EAFF1B,KACOC,EACLyB,EADFC,IAAO1B,WAET,OACE,YAAC,IAAD,CACEA,WAAYA,GAAc,GAC1BD,KAAMA,EACND,QAASA,EACTD,MAAOA,EACPgB,IAAKW,UAkCZ,IAAMG,EAAS","file":"component---src-pages-blog-js-0f33594e21eb89132c2e.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Tags from \"../Tags\";\nimport {\n  text,\n  xLargeMgBottom,\n  secondTitle,\n  mgBottom,\n  linkStyle\n} from \"../../design\";\n\nconst BlogCard = ({ title, excerpt, slug, categories }) => {\n  return (\n    <div css={xLargeMgBottom}>\n      <p css={secondTitle}>{title}</p>\n      <p css={text} dangerouslySetInnerHTML={{ __html: excerpt }} />\n      {categories.length > 0 && (\n        <div css={mgBottom}>\n          {categories.map(({ category }, index) => (\n            <Tags key={index} name={category} />\n          ))}\n        </div>\n      )}\n      <Link css={linkStyle} to={`/${slug}`}>\n        Read more\n      </Link>\n    </div>\n  );\n};\n\nBlogCard.propTypes = {\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  slug: PropTypes.string,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      category: PropTypes.string\n    })\n  )\n};\n\nexport default BlogCard;\n","export { default } from \"./BlogCard\";\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Template from \"../components/Template\";\nimport BlogCard from \"../components/BlogCard\";\nimport { Container, pageTitle } from \"../design\";\n\nconst Blog = props => {\n  const data = props.data.allWordpressPost.edges;\n  return (\n    <Template>\n      <Container small>\n        <h2 css={pageTitle}>Articles</h2>\n        {data.map(({ node }, i) => {\n          const {\n            title,\n            excerpt,\n            slug,\n            acf: { categories }\n          } = node;\n          return (\n            <BlogCard\n              categories={categories || []}\n              slug={slug}\n              excerpt={excerpt}\n              title={title}\n              key={i}\n            />\n          );\n        })}\n      </Container>\n    </Template>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allWordpressPost: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            title: PropTypes.string,\n            excerpt: PropTypes.string,\n            slug: PropTypes.string,\n            acf: PropTypes.shape({\n              categories: PropTypes.arrayOf(\n                PropTypes.shape({\n                  category: PropTypes.string\n                })\n              )\n            })\n          })\n        })\n      )\n    })\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query {\n    allWordpressPost {\n      edges {\n        node {\n          title\n          excerpt\n          slug\n          acf {\n            categories {\n              category\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}