{"version":3,"sources":["webpack:///./src/pages/en/blog.js","webpack:///./src/components/Tags/Tags.js","webpack:///./src/views/page.js","webpack:///./src/components/BlogCard/BlogCard.js"],"names":["Blog","props","data","allMdx","edges","sort","a","b","Date","node","frontmatter","date","getTime","title","translateLabel","translateTo","map","i","slug","excerpt","path","includes","categories","key","Tags","name","css","tags","Page","subtitle","children","small","className","mgBottom","to","pageTitle","secondTitle","text","defaultProps","zIndex","xLargeMgBottom","BlogCard","externalLink","label","dangerouslySetInnerHTML","__html","length","index","category","rel","target","linkStyle","href"],"mappings":"6FAAA,+CAyCeA,UAnCF,SAACC,GACZ,IAAMC,EAAOD,EAAMC,KAAKC,OAAOC,MAAMC,MACnC,SAACC,EAAGC,GAAJ,OACE,IAAIC,KAAKD,EAAEE,KAAKC,YAAYC,MAAMC,UAClC,IAAIJ,KAAKF,EAAEG,KAAKC,YAAYC,SAEhC,OACE,YAAC,IAAD,CACEE,MAAM,WACNC,eAAe,mBACfC,YAAY,SAEZ,uBACGb,EAAKc,KAAI,WAAWC,GAAO,IAAfR,EAAc,EAAdA,KACHS,EAAsBT,EAAtBS,KAAMR,EAAgBD,EAAhBC,YACNG,EAAyBH,EAAzBG,MAAOM,EAAkBT,EAAlBS,QAASC,EAASV,EAATU,KACxB,OAAIF,EAAKG,SAAS,QAAUD,EAAKC,SAAS,cACjC,KAIP,YAAC,IAAD,CACEC,WAAY,GACZF,KAAMA,EACND,QAASA,EACTN,MAAOA,EACPU,IAAKN,W,gGCnBJO,EARF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OAAO,oBAAMC,IAAKC,KAAOF,K,4MCC3B,IAAMG,EAAO,SAAC,GAAgE,IAA9Df,EAA6D,EAA7DA,MAAOgB,EAAsD,EAAtDA,SAAUf,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,YAAae,EAAe,EAAfA,SAC5D,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAWC,OAAK,GACd,mBAAKC,UAAU,gBACZlB,GAAkBC,GACjB,mBACEW,IAAKA,YAAF,IACCO,MAGJ,YAAC,OAAD,CAAMD,UAAU,iBAAiBE,GAAE,GAAKnB,GACrCD,IAIND,GAAS,kBAAIa,IAAKS,KAAYtB,GAC9BgB,GAAY,iBAAGH,IAAKU,KAAcP,GACnC,mBAAKH,IAAKW,KAAOP,OAOZF,MAUfA,EAAKU,aAAe,CAClBzB,MAAO,GACPgB,SAAU,GACVf,eAAgB,GAChBC,YAAa,K,yPCjCf,IAAMwB,EAASb,YAAH,IAGRc,KAGEC,EAAW,SAAC,GAOX,IANL5B,EAMI,EANJA,MACAM,EAKI,EALJA,QACAC,EAII,EAJJA,KACAE,EAGI,EAHJA,WACAoB,EAEI,EAFJA,aACAC,EACI,EADJA,MAEA,OACE,mBAAKjB,IAAKa,GACR,iBAAGb,IAAKU,KAAcvB,GACtB,iBAAGa,IAAKW,IAAMO,wBAAyB,CAAEC,OAAQ1B,KAChDG,EAAWwB,OAAS,GACnB,mBAAKpB,IAAKO,KACPX,EAAWN,KAAI,WAAe+B,GAAf,IAAGC,EAAH,EAAGA,SAAH,OACd,YAACxB,EAAA,EAAD,CAAMD,IAAKwB,EAAOtB,KAAMuB,QAI7BN,GAAgBtB,GACf,iBACEY,UAAU,iBACViB,IAAI,sBACJC,OAAO,SACPxB,IAAKyB,IACLC,KAAMhC,GAELuB,IAGHD,GAAgBtB,GAChB,YAAC,OAAD,CAAMY,UAAU,iBAAiBN,IAAKyB,IAAWjB,GAAId,GAClDuB,KAoBXF,EAASH,aAAe,CACtBK,MAAO,YACPrB,WAAY,IAGCmB","file":"component---src-pages-en-blog-js-f4813e25a5964e72caac.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { graphql } from \"gatsby\";\nimport BlogCard from \"../../components/BlogCard\";\nimport Page from \"../../views/page\";\n\nconst Blog = (props) => {\n  const data = props.data.allMdx.edges.sort(\n    (a, b) =>\n      new Date(b.node.frontmatter.date).getTime() -\n      new Date(a.node.frontmatter.date)\n  );\n  return (\n    <Page\n      title=\"Articles\"\n      translateLabel=\"Ver em PortuguÃªs\"\n      translateTo=\"/blog\"\n    >\n      <div>\n        {data.map(({ node }, i) => {\n          const { slug, frontmatter } = node;\n          const { title, excerpt, path } = frontmatter;\n          if (slug.includes(\"__\") || !path.includes(\"/posts_en/\")) {\n            return null;\n          }\n\n          return (\n            <BlogCard\n              categories={[]}\n              path={path}\n              excerpt={excerpt}\n              title={title}\n              key={i}\n            />\n          );\n        })}\n      </div>\n    </Page>\n  );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query EnglishPosts {\n    allMdx {\n      edges {\n        node {\n          slug\n          frontmatter {\n            date\n            excerpt\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { tags } from \"../../design\";\n\nconst Tags = ({ name }) => {\n  return <span css={tags}>{name}</span>;\n};\n\nTags.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default Tags;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Template from \"../components/Template\";\nimport { Container, pageTitle, mgBottom, secondTitle, text } from \"../design\";\n\nconst Page = ({ title, subtitle, translateLabel, translateTo, children }) => {\n  return (\n    <Template>\n      <Container small>\n        <div className=\"post-content\">\n          {translateLabel && translateTo && (\n            <div\n              css={css`\n                ${mgBottom}\n              `}\n            >\n              <Link className=\"secondary-font\" to={`${translateTo}`}>\n                {translateLabel}\n              </Link>\n            </div>\n          )}\n          {title && <h2 css={pageTitle}>{title}</h2>}\n          {subtitle && <p css={secondTitle}>{subtitle}</p>}\n          <div css={text}>{children}</div>\n        </div>\n      </Container>\n    </Template>\n  );\n};\n\nexport default Page;\n\nPage.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  translateLabel: PropTypes.string,\n  translateTo: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nPage.defaultProps = {\n  title: \"\",\n  subtitle: \"\",\n  translateLabel: \"\",\n  translateTo: \"\",\n};\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Tags from \"../Tags\";\nimport {\n  text,\n  xLargeMgBottom,\n  secondTitle,\n  mgBottom,\n  linkStyle,\n} from \"../../design\";\n\nconst zIndex = css`\n  position: relative;\n  z-index: 1;\n  ${xLargeMgBottom};\n`;\n\nconst BlogCard = ({\n  title,\n  excerpt,\n  path,\n  categories,\n  externalLink,\n  label,\n}) => {\n  return (\n    <div css={zIndex}>\n      <p css={secondTitle}>{title}</p>\n      <p css={text} dangerouslySetInnerHTML={{ __html: excerpt }} />\n      {categories.length > 0 && (\n        <div css={mgBottom}>\n          {categories.map(({ category }, index) => (\n            <Tags key={index} name={category} />\n          ))}\n        </div>\n      )}\n      {externalLink && path && (\n        <a\n          className=\"secondary-font\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          css={linkStyle}\n          href={path}\n        >\n          {label}\n        </a>\n      )}\n      {!externalLink && path && (\n        <Link className=\"secondary-font\" css={linkStyle} to={path}>\n          {label}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nBlogCard.propTypes = {\n  externalLink: PropTypes.bool,\n  title: PropTypes.string,\n  label: PropTypes.string,\n  excerpt: PropTypes.string,\n  path: PropTypes.string,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      category: PropTypes.string,\n    })\n  ),\n};\n\nBlogCard.defaultProps = {\n  label: \"Read more\",\n  categories: [],\n};\n\nexport default BlogCard;\n"],"sourceRoot":""}